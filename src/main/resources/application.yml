server:
  port: 9190

serverInfo:
  name: "Aces ETH-ARK Channel Service"
  description: "ACES ETH to ARK Channel service for transferring ETH to ARK"
  instructions: >
    After this contract is executed, any ETH sent to depositEthAddress will be exchanged for ARK and
    sent directly to the given recipientArkAddress less service fees.
  version: "1.0.0"
  websiteUrl: "https://arkaces.com"
  flatFee: "0"
  percentFee: "1.00%"
  inputSchema: >
    {
      "type": "object",
      "properties": {
        "recipientArkAddress": {
          "type": "string",
          "title": "Recipient ARK Address",
          "description": "Enter the ARK address to receive transfers."
        }
      },
      "required": [
        "recipientArkAddress"
      ]
    }
  outputSchema: >
    {
      "type": "object",
      "properties": {
        "depositEthAddress": {
          "type": "string",
          "title": "Deposit ETH Address",
          "description": "Send ETH to this address to execute contract."
        },
        "recipientArkAddress": {
          "type": "string",
          "title": "Recipient ARK Address",
          "description": "ARK will arrive at this address on contract execution."
        },
        "transfers": {
          "type": "array",
          "properties": {
            "id": {
              "type": "string",
              "title": "Transfer ID",
              "description": "Identifier for transfer"
            },
            "createdAt": {
              "type": "string",
              "title": "Create Date",
              "description": "The time the contract was created."
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "The status of the transfer"
            },
            "ethTransactionId": {
              "type": "string",
              "title": "Transaction ID (ETH)",
              "description": "The transaction ID for the ETH contract fulfillment"
            },
            "ethAmount": {
              "type": "string",
              "title": "Transfer Amount (ETH)",
              "description": "The amount of ETH to transfer"
            },
            "ethToArkRate": {
              "type": "string",
              "title": "ARK/ETH Exchange Rate",
              "description": "Amount of ARK to receive per ETH"
            },
            "ethFlatFee": {
              "type": "string",
              "title": "Flat Fee (ETH)",
              "description": "Fixed fee per execution, charged in ETH"
            },
            "ethPercentFee": {
              "type": "string",
              "title": "Percentage Fee (ETH)",
              "description": "Percentage fee per execution, charged in ETH"
            },
            "ethTotalFee": {
              "type": "string",
              "title": "Total Fees (ETH)",
              "description": "The sum of flat fees and percentage fees, charged in ETH"
            },
            "arkTransactionId": {
              "type": "string",
              "title": "Transaction ID (ARK)",
              "description": "The transaction ID for the ARK contract fulfillment"
            },
            "arkSendAmount": {
              "type": "string",
              "title": "Receiving Amount (ARK)",
              "Description": "Total ARK to be received, net of fees"
            }
          }
        }
      }
    }

#spring:
#  datasource:
#    driver-class-name: "org.h2.Driver"
#    url: "jdbc:h2:~/tmp/eth_ark_channel_service.db;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE"
#  database:
#    hibernate:
#      ddl-auto: "validate"
#  jpa:
#      database-platform: org.hibernate.dialect.H2Dialect

#spring:
#  datasource:
#    platform: postgres
#    url: jdbc:postgresql://localhost:5432/aces_eth_ark_channel_db
#    username: service_user
#    password: password
#  jpa:
#    hibernate:
#      ddl-auto: validate
#  mail:
#    host: "change-me"
#    port: 587
#    username: "change-me"
#    password: "change-me"
#    properties:
#      mail.smtp.auth: true
#      mail.startttls.enable: true
#
#flyway:
#  enabled: true

arkNetworkConfigPath: "ark_network_config/testnet.yml"

serviceArkAccount:
  address: change-me
  passphrase: change-me

fees:
  ethFlatFee: 0
  ethPercentFee: 1

ethereumListener:
  url: http://localhost:9090
  apiKey: change-me

ethEventCallbackUrl: "http://localhost:9190/ethereumEvents"

ethMinConfirmations: 1

ethRpcRootUri: "http://127.0.0.1:8545"

# Send notifications on low capacity and transfer completed/failed
notifications:
  enabled: false
  recipientEmailAddress: "change_me"
  fromEmailAddress: "change_me"

# Capacity threshold at which low capacity notifications will be sent
lowCapacityThreshold: "100.00"
